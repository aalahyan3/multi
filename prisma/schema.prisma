// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  username String @unique
  email String @unique
  first_name String
  last_name String
  image_url  String?
  createdAt DateTime @default(now())
  bio String?
  specific_color String @default("#494bd6")
  last_seen DateTime @default(now())
  messages Message[]
  chats ChatMember[]
  invitesMade Invite[] @relation("invitesMade")
  invitesRecieved Invite[] @relation("invitesRecieved")
  createdChats Chat[] @relation("createdChats")
}


model Chat{
  id String @id @default(cuid())
  name String
  image_url String
  members ChatMember[]
  messages Message[]
  createdAt DateTime @default(now())
  creatorId Int
  creator User @relation("createdChats", fields: [creatorId], references: [id])
  invites Invite[] @relation("Invites")
}

model ChatMember{
  id String @id @default(cuid())
  chat Chat @relation(fields: [chatId], references: [id])
  chatId String
  user User @relation(fields: [userId], references: [id])
  userId Int
  isAdmin Boolean @default(false)
}

model Message{
  id String @id @default(cuid())
  chat Chat @relation(fields:[chatId], references: [id])
  chatId String
  sender User @relation(fields:[senderId], references: [id])
  senderId Int
  content String
  createdAt DateTime @default(now())
}

model Invite{
  id String @id @default(cuid())
  chat Chat @relation("Invites", fields: [chatId], references: [id])
  chatId String
  invitedUser User @relation("invitesRecieved", fields: [invitedUserId], references: [id])
  invitedUserId Int
  inviterUser User @relation("invitesMade", fields: [inviterUserId], references: [id])
  inviterUserId Int
  isAccepted Boolean @default(false)
}